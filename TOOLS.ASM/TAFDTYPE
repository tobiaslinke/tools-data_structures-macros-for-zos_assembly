***********************************************************************
* DESCRIPTION                                                         *
* ___________________________________________________________________ *
* DETERMINES IF INPUT IS OF DATATYPE NUMERIC OR CHARACTER____________ *
* ___________________________________________________________________ *
* ENTRY:    R0:  @WORKAREA___________________________________________ *
* __________R1:__@PARMLIST___________________________________________ *
* _______________PARM1_-->_@INPUT_STRING_____________________________ *
* _______________PARM2_-->_LENGTH_INPUT_STRING_______________________ *
* ___________________________________________________________________ *
* RETURN:_  R1:  DATATYPE OF INPUT___________________________________ *
* _______________0_-->_ILLEGAL_CHARACTER_____________________________ *
* _______________1_-->_ALL_NUMERIC___________________________________ *
* _______________2_-->_ALL_UPPER_CHARACTERS__________________________ *
* _______________5_-->_ALL_LOWER_CHARACTERS__________________________ *
* _______________7_-->_MIXED_CHARACTERS______________________________ *
* _______________3_-->_ALPHA_NUMERIC_UPPER___________________________ *
* _______________6_-->_ALPHA_NUMERIC_LOWER___________________________ *
* _______________8_-->_ALPHA_NUMERIC_MIXED___________________________ *
* ___________________________________________________________________ *
* ___________________________________________________________________ *
* __________R15: RC__________________________________________________ *
* ___________________________________________________________________ *
***********************************************************************
           TITLE    'TAFDTYPE DETERMINE EBCDIC INPUT DATATYPE'
TAFDTYPE   RSECT    ,                                    REANTRENT
TAFDTYPE   AMODE    31
TAFDTYPE   RMODE    ANY
***********************************************************************
* REGISTER
***********************************************************************
R0         EQU      0
R1         EQU      1                                                   
R2         EQU      2                                                   
R3         EQU      3                                                   
R4         EQU      4                                                   
R5         EQU      5                                                   
R6         EQU      6                                                   
R7         EQU      7                                                   
R8         EQU      8                                                   
R9         EQU      9                                                   
R10        EQU      10
R11        EQU      11                                                  
R12        EQU      12                                                  
R13        EQU      13                                                  
R14        EQU      14                                                  
R15        EQU      15                                                  
***********************************************************************
* ENTRY
***********************************************************************
           SAVE     (14,12)                        SAVE CALLER REGS
           LR       R12,R15                  R12:  BASE REGISTER
           USING    TAFDTYPE,R12
           LR       R11,R0                   R11:  @WORKAREA
           LR       R4,R1                    R4:   @PARMLIST
***********************************************************************
* CREATE WORKAREA
***********************************************************************
           USING    WORKAREA,R11
           ST       R13,SAVEAREA+4
           LA       R15,SAVEAREA
           ST       R15,8(R13)
           LR       R13,R15
           XC       TYPE,TYPE
           XC       RC,RC
***********************************************************************
* MAIN
***********************************************************************
           L        R5,4(,R4)                R5:   LENGTH INPUT STRING
           L        R4,0(,R4)                R4:   @INPUT STRING
*----------------------------------------------------------------------
*          TEST ALL CHARACTERS
*----------------------------------------------------------------------
           LAY      R4,-1(,R4)                     DECR. FOR 1. LOOP
           AHI      R5,1                           DECR. FOR 1. LOOP
           LARL     R1,TRANSTBL              R1:   @TRANSTBL
CONTINUE   LA       R4,1(,R4)                      MOVE PTR FORWARD
           AHI      R5,-1                          DECR. LENGTH
           CIJE     R5,0,ATEND                     IF AT END THEN LEAVE
           TRTE     R4,R15,B'0000'                 TEST INPUT
           JC       1,CONTINUE                     256 BYTES PROCESSED
           JC       8,ATEND
           B        SELECT(R15)
SELECT     DS       0H
           J        ILLEGAL                        00 - ILLEGAL CHAR
           J        NUMERIC                        04 - NUMERIC CHAR
           J        CHAR_UPPER                     08 - ALPH.CHAR UPPER
           J        CHAR_LOWER                     0C - ALPH.CHAR LOWER
           J        SPECIAL                        10 - SPECIAL CHAR
*          J                                       14
*          J                                       18
*--------------------------------------------------
*          WE FOUND AN ILLEGAL CHARACTER
*--------------------------------------------------
ILLEGAL    DS       0H
           J        EXIT01                         RETURN
*--------------------------------------------------
*          WE FOUND A NUMERIC CHARACTER
*--------------------------------------------------
NUMERIC    DS       0H
           OI       TYPE,NUMERIC_                  FLAG NUMERIC CHAR
           J        CONTINUE                       GO ON
*--------------------------------------------------
*          WE FOUND A UPPER CASE CHARACTER
*--------------------------------------------------
CHAR_UPPER DS       0H
           OI       TYPE,CH_UPPER_                 FLAG UPPER CHAR
           J        CONTINUE                       GO ON
*--------------------------------------------------
*          WE FOUND A LOWER CASE CHARACTER
*--------------------------------------------------
CHAR_LOWER DS       0H
           OI       TYPE,CH_LOWER_                 FLAG LOWER CHAR
           J        CONTINUE                       GO ON
*--------------------------------------------------
*          WE FOUND A SPECIAL CHARACTER
*--------------------------------------------------
SPECIAL    DS       0H
           OI       TYPE,SPECIAL_                  FLAG SPECIAL CHAR
           J        CONTINUE                       GO ON
*--------------------------------------------------
*          WE ARE AT THE END OF THE STRING
*          NOW WE NEED TO DETERMINE WHAT
*          KIND OF DATA WE FOUND
*--------------------------------------------------
ATEND      DS       0H
           TM       TYPE,B'10000000'               NUMERIC ?
           JO       ADD_NUM
ATEND2     TM       TYPE,B'00010000'               UPPER CHAR ?
           JO       ADD_UPPER
ATEND3     TM       TYPE,B'00001000'               LOWER CHAR ?
           JO       ADD_LOWER
           J        EXIT01
ADD_NUM    ASI      RC,1
           J        ATEND2
ADD_UPPER  ASI      RC,2
           J        ATEND3
ADD_LOWER  ASI      RC,5
           J        EXIT01
***********************************************************************
* RETURN
***********************************************************************
EXIT01     DS       0H
           L        R13,4(R13)               R13:  CALLER SAVEAREA
           L        R1,RC                    R1:   RETURN TYPE OF DATA
           SR       R15,R15                  R15:  RC=0
           L        R14,12(,R13)             R14:  RETURN ADDR.
           RETURN   (2,12),RC=(15)                 RETURN TO CALLER
***********************************************************************
* CONSTANTS "'
***********************************************************************
TRANSTBL   DS       0D
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'00' - X'0F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'10' ' X'1F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'20' - X'2F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'30' - X'3F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'40' - X'4F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'50' - X'5F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'60' - X'6F'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'70' - X'7F'
  DC X'00,0C,0C,0C,0C,0C,0C,0C,0C,0C,00,00,00,00,00,00' X'80' - X'8F'
  DC X'00,0C,0C,0C,0C,0C,0C,0C,0C,0C,00,00,00,00,00,00' X'90' - X'9F'
  DC X'00,00,0C,0C,0C,0C,0C,0C,0C,0C,00,00,00,00,00,00' X'A0' - X'AF'
  DC X'00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00' X'B0' - X'BF'
  DC X'00,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00' X'C0' - X'CF'
  DC X'00,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00' X'D0' - X'DF'
  DC X'00,00,08,08,08,08,08,08,08,08,00,00,00,00,00,00' X'E0' - X'EF'
  DC X'04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00' X'F0' - X'FF'
           LTORG
***********************************************************************
* WORKAREA
***********************************************************************
WORKAREA   DSECT    ,                              MY WORKAREA
SAVEAREA   DS       18F                            MY SAVEAREA
RC         DS       F                              RETRUN DATA TYPE
TYPE       DS       F                              FOUND TYPE FLAG
NUMERIC_   EQU      B'10000000'                    FOUND NUMERIC CHAR
SPECIAL_   EQU      B'01000000'                    FOUND SPECIAL CHAR
CH_UPPER_  EQU      B'00010000'                    FOUND UPPER CHAR
CH_LOWER_  EQU      B'00001000'                    FOUND LOWER CHAR
WORKAREAL  EQU      *-WORKAREA                     SIZE OF WORKAREA
***********************************************************************
* DSECTS
***********************************************************************
           END      TAFDTYPE